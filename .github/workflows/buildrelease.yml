name: Publish utility on release

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
    build:
        name: Build binaries
        runs-on: ubuntu-latest
        steps:

          - name: 'ðŸ“„ Checkout'
            uses: actions/checkout@v4

          - name: Write release version
            run: |
              TAG=${{github.event.release.tag_name}}
              TAG=${TAG:1}
              echo "$TAG"

          - name: 'ðŸ“¦ Package windows x64'
            run: |
                cd ${{github.workspace}}
                dotnet publish TelegramDownloader/TelegramDownloader.csproj -r win-x64 -c Release -o bin/win-x64 -p:PublishSingleFile=true,AssemblyVersion=${TAG},Version=${TAG} --self-contained false
                zip -r TelegramFileManager-${{github.event.release.tag_name}}-win-x64.zip bin/win-x64
                gh release upload ${{github.event.release.tag_name}} TelegramFileManager-${{github.event.release.tag_name}}-win-x64.zip
            env:
              GH_TOKEN: ${{ secrets.TOKENBuild }}
            shell: bash

          - name: 'ðŸ“¦ Package windows x86'
            run: |
                cd ${{github.workspace}}
                dotnet publish TelegramDownloader/TelegramDownloader.csproj -r win-x86 -c Release -o bin/win-x86 -p:PublishSingleFile=true,AssemblyVersion=${TAG},Version=${TAG} --self-contained false
                zip -r TelegramFileManager-${{github.event.release.tag_name}}-win-x86.zip bin/win-x86
                gh release upload ${{github.event.release.tag_name}} TelegramFileManager-${{github.event.release.tag_name}}-win-x86.zip
            env:
              GH_TOKEN: ${{ secrets.TOKENBuild }}
            shell: bash

          - name: 'ðŸ“¦ Package windows arm'
            run: |
                cd ${{github.workspace}}
                dotnet publish TelegramDownloader/TelegramDownloader.csproj -r win-arm64 -c Release -o bin/win-arm64 -p:PublishSingleFile=true,AssemblyVersion=${TAG},Version=${TAG} --self-contained false
                zip -r TelegramFileManager-${{github.event.release.tag_name}}-win-arm64.zip bin/win-arm64
                gh release upload ${{github.event.release.tag_name}} TelegramFileManager-${{github.event.release.tag_name}}-win-arm64.zip
            env:
              GH_TOKEN: ${{ secrets.TOKENBuild }}
            shell: bash

          - name: 'ðŸ“¦ Package linux x64'
            run: |
                cd ${{github.workspace}}
                dotnet publish TelegramDownloader/TelegramDownloader.csproj -r linux-x64 -c Release -o bin/linux-x64 -p:PublishSingleFile=true,AssemblyVersion=${TAG},Version=${TAG} --self-contained false
                zip -r TelegramFileManager-${{github.event.release.tag_name}}-linux-x64.zip bin/linux-x64
                gh release upload ${{github.event.release.tag_name}} TelegramFileManager-${{github.event.release.tag_name}}-linux-x64.zip
            env:
              GH_TOKEN: ${{ secrets.TOKENBuild }}
            shell: bash

          - name: 'ðŸ“¦ Package linux arm'
            run: |
                cd ${{github.workspace}}
                dotnet publish TelegramDownloader/TelegramDownloader.csproj -r linux-arm -c Release -o bin/linux-arm -p:PublishSingleFile=true,AssemblyVersion=${TAG},Version=${TAG} --self-contained false
                zip -r TelegramFileManager-${{github.event.release.tag_name}}-linux-arm.zip bin/linux-arm
                gh release upload ${{github.event.release.tag_name}} TelegramFileManager-${{github.event.release.tag_name}}-linux-arm.zip
            env:
              GH_TOKEN: ${{ secrets.TOKENBuild }}
            shell: bash

          - name: 'ðŸ“¦ Package mac OS x64' 
            run: |
                cd ${{github.workspace}}
                dotnet publish TelegramDownloader/TelegramDownloader.csproj -r osx-x64 -c Release -o bin/osx-x64 -p:PublishSingleFile=true,AssemblyVersion=${TAG},Version=${TAG} --self-contained false
                zip -r TelegramFileManager-${{github.event.release.tag_name}}-osx-x64.zip bin/osx-x64
                gh release upload ${{github.event.release.tag_name}} TelegramFileManager-${{github.event.release.tag_name}}-osx-x64.zip
            env:
              GH_TOKEN: ${{ secrets.TOKENBuild }}
            shell: bash
