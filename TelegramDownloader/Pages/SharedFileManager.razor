@page "/shared/{id}"

@using TelegramDownloader.Data
@using TelegramDownloader.Data.db
@using TelegramDownloader.Models
@using TelegramDownloader.Pages.Partials
@using TelegramDownloader.Pages.Partials.impl
@inject IFileService fs
@inject ILogger<FileManager> Logger
@inject IJSRuntime JSRuntime;
@inject NavigationManager MyNavigationManager;

<style>
    .e-filemanager .e-splitter {
        height: 75vh !important;
    }

    .e-filemanager {
        height: 80vh !important;
    }
</style>

<h3>File Manager <span class="badge bg-secondary">@chatName</span></h3>


<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link active" aria-current="page" href="@($"/shared/{id}")">Remote</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@($"/shared-local/{id}")">Local</a>
    </li>
</ul>

<TelegramDownloader.Pages.Partials.impl.FileManagerImpl @ref="fmi" id="@id" isShared=true bsi="@bsi"></TelegramDownloader.Pages.Partials.impl.FileManagerImpl>


@code {

    [Parameter]
    public string id { get; set; }

    BsonSharedInfoModel bsi { get; set; }
    public string chatName { get; set; }
    FileManagerImpl fmi { get; set; }

    NotificationModel nm = new NotificationModel();


    protected override async Task OnInitializedAsync()
    {
        try
        {
            bsi = await fs.GetSharedInfoById(id);
            chatName = bsi.Name;
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error on GetSharedInfoById");
            nm.sendMessage("Error", "Error on GetSharedInfoById", NotificationTypes.Error);
        }
    }

}
