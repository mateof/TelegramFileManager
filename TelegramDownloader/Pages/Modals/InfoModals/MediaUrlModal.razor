@inject IJSRuntime JS

<Modal @ref="modal" Title="Media URL">
    <BodyTemplate>
        <div class=" input-group mb-3">
            <span class=" input-group-text">URL</span>
            <input type="text" class=" form-control" disabled aria-label="url" value="@url">
            <button class=" input-group-text btn btn-secondary" @onclick="CopyToClipboard"><i class="bi bi-copy"></i></button>
        </div>
    </BodyTemplate>
    <FooterTemplate>
        @* <Button Color="ButtonColor.Secondary" @onclick="OnHideModalClick">Close</Button> *@
        <Button Color="ButtonColor.Primary" @onclick="OnOpenClick">Open URL</Button>
    </FooterTemplate>
</Modal>


@code {
    [Parameter] public string url { get; set; }
    private Modal modal = default!;
    [Inject] protected ToastService ToastService { get; set; } = default!;

    public async Task OnShowModalClick()
    {
        await modal.ShowAsync();
    }

    private async Task CopyToClipboard()
    {
        try
        {
            await JS.InvokeVoidAsync("copyToClipboard", url);
            ToastService.Notify(new(ToastType.Success, $"Copied") { Title = "Success", AutoHide = true });
        } catch(Exception ex)
        {
            ToastService.Notify(new ToastMessage(ToastType.Danger, $"Error: {ex.Message}.") { Title = "Error", AutoHide = true });
        }
        
    }

    private async Task OnOpenClick()
    {
        await JS.InvokeVoidAsync("open", url, "_blank");
    }

    public async Task OnHideModalClick()
    {
        await modal.HideAsync();
    }
}
